language: java


before_script:
- chmod +x ./run_build.sh
- ./run_build.sh
#AUTH_RES=`curl -s --form project="$COVERITY_SCAN_PROJECT_NAME" --form token="$COVERITY_SCAN_TOKEN" $SCAN_URL/api/upload_permitted`
#- AUTH_RES=`curl -s --form project="jakubuskuba/TravisTest" --form token="$COVERITY_SCAN_TOKEN" https://scan.coverity.com/api/upload_permitted`
#- echo $AUTH_RES
#- AUTH=`echo $AUTH_RES | ruby -e "require 'rubygems'; require 'json'; puts JSON[STDIN.read]['upload_permitted']"`
#- echo $AUTH
#- if [ "$AUTH" = "false" ]; then echo -e "\033[33;1mXXXXXXXXXXXXXXXXXXCoverity Scan analysis authorized per quota.\033[0m" fi

script: mvn clean package

#after_success:
#  - ant instrument
#  - mvn test
#  - ant report
#  - mvn coveralls:report


#  - mvn jacoco:report org.eluder.coveralls:coveralls-maven-plugin:report

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "my97cMNiskIJ8k+OY3vn1ODLA7LaKhSo+3f213tIrSf34aJtaF5L0rKtWKVRsion8jh4d3cdwVcjUzt56rg/bUPU//P2Fjw71ktXXg+OYtpZ2UePF49kcIGkbIdN3y3Bd3w3uuSb24FfhRYPmXQcXdmDXYRfTL+rM+sh/h+eYpY="

addons:
  coverity_scan:
    project:
      name: "jakubuskuba/TravisTest"
      description: "Build submitted via Travis CI"
    notification_email: jakubus_kuba@o2.pl
    build_command: "mvn clean -DskipTests=true compile"
    branch_pattern: master
