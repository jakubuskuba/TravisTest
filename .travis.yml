language: java

before_script:
- AUTH_RES=`curl -s --form project="$COVERITY_SCAN_PROJECT_NAME" --form token="$COVERITY_SCAN_TOKEN" $SCAN_URL/api/upload_permitted`
- if [ "$AUTH_RES" = "Access denied" ]; then
  echo -e "\033[33;1mXXXXXXXXXXXXXXXXXXXXXCoverity Scan API access denied. Check COVERITY_SCAN_PROJECT_NAME and COVERITY_SCAN_TOKEN.\033[0m"
#  exit 1
else
  AUTH=`echo $AUTH_RES | ruby -e "require 'rubygems'; require 'json'; puts JSON[STDIN.read]['upload_permitted']"`
  if [ "$AUTH" = "true" ]; then
    echo -e "\033[33;1mXXXXXXXXXXXXXXXXXXCoverity Scan analysis authorized per quota.\033[0m"
  else
    WHEN=`echo $AUTH_RES | ruby -e "require 'rubygems'; require 'json'; puts JSON[STDIN.read]['next_upload_permitted_at']"`
    echo -e "\033[33;1mXXXXXXXXXXXXXXXXXCoverity Scan analysis NOT authorized until $WHEN.\033[0m"
#    exit 1
  fi
fi


script: mvn clean package

#after_success:
#  - ant instrument
#  - mvn test
#  - ant report
#  - mvn coveralls:report


#  - mvn jacoco:report org.eluder.coveralls:coveralls-maven-plugin:report

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "my97cMNiskIJ8k+OY3vn1ODLA7LaKhSo+3f213tIrSf34aJtaF5L0rKtWKVRsion8jh4d3cdwVcjUzt56rg/bUPU//P2Fjw71ktXXg+OYtpZ2UePF49kcIGkbIdN3y3Bd3w3uuSb24FfhRYPmXQcXdmDXYRfTL+rM+sh/h+eYpY="

addons:
  coverity_scan:
    project:
      name: "jakubuskuba/TravisTest"
      description: "Build submitted via Travis CI"
    notification_email: jakubus_kuba@o2.pl
    build_command:   "mvn clean compile -DskipTests=true "
    branch_pattern: master
